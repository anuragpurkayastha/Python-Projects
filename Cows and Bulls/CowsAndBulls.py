# -*- coding: utf-8 -*-
"""
Create a program that will play the “cows and bulls” game with the user. The game works like this:

Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout the game and tell the user at the end.

Say the number generated by the computer is 1038. An example interaction could look like this:

  Welcome to the Cows and Bulls Game! 
  Enter a number: 
  >>> 1234
  2 cows, 0 bulls
  >>> 1256
  1 cow, 1 bull
  ...
Until the user guesses the number.
"""
from random import randint
from time import sleep

def numberToDigits(number):
	"""
	Convert a number to a list of digits
	"""
	digit_list = []
	
	for digit in str(number):
		digit_list.append(int(digit))
	return digit_list

def countCowsAndBulls(num1,num2):
	"""
	This function calculates the number of 'Cows' and 'Bulls' given two numbers, num1 and num2. The function returns a list, 'CowsAndBulls', with the first element being the number of 'cows' and the second element being the number of 'bulls'.
	
	COWS:	For every digit that the user guessed correctly in the correct place, they have a “cow”.
	BULLS:	For every digit the user guessed correctly in the wrong place is a “bull".
	
	METHOD:
		-	First determine the digits of each number which are the same and are in the same position.
			* To determine which digits are the common between the two numbers, loop through each digit of each number and calculate the difference between the 2 digits.
			* If the result of the difference is zero, that digit position in each number has the same value. Increment the 'cows' counter by one.
			* Mark that digit position in EACH number as '-1' meaning it has been taken care of. This takes care of repeated digits.
		-	Then loop through the digits of one number (e.g. num1):
			* If the current digit in num1 != -1 AND exists in num2, then increment 'bulls' counter by 1. Convert the digit position in which the digit exists in num2 as '-1' (== taken care of).
	"""
		
	CowsAndBulls = [0,0]	# Counter for the number of cows and bulls.
	difference = []			# List to store the digits of the each difference.
	
	num1_lst = numberToDigits(num1)		# Convert both input numbers to lists containing each individual digit as one element.
	num2_lst = numberToDigits(num2)
	
	# Loop through each digit position of the input number, num1
	for i in range(0,len(num1_lst)):
	
		# Calculate the difference of the digits occurring at digit position 'i' between the two numbers. Append to 'difference' digit list.
		difference.append(num1_lst[i] - num2_lst[i])
		
	# DEBUGGING
	# print ("DEBUG: The difference list is: ",difference)
	
	# For each element and value in 'difference' count the number of cows.
	for i, digit in enumerate(difference):
	
		# If the element in 'difference' is zero, that means the two digits at the position in both num1 and num2 are the same => increment 'cows' counter.
		if digit == 0:
			CowsAndBulls[0] += 1
			num1_lst[i] = -1	# Convert the digit at position 'i' to '-1' to indicate that it has been taken care of.
			num2_lst[i] = -1
			
	# DEBUGGING			
	# print ("DEBUG: num1 and num2 lists after difference operation: ",num1_lst, num2_lst)
	
	# For each element and value in the 'num1_lst' list, calculate the number of bulls.
	for i,digit in enumerate(num1_lst):
	
		# If the digits at position 'i' in num1 and num2 are not the same and the digit exists in num2, increment bulls count.
		if num1_lst[i] != num2_lst[i] and digit in num2_lst:
			num2_lst[num2_lst.index(digit)] = -1
			CowsAndBulls[1] += 1
	
	return CowsAndBulls

""" DEBUGGING CODE
print ("The test numbers are: 1322 and 3122")
cows_bulls = countCowsAndBulls(1322,3132)
print (cows_bulls[0]," cows, ",cows_bulls[1], "bulls")	# This should print out 2 cows and 2 bull
"""

# MAIN
if __name__ == "__main__":
	
	numberGuessed = False	# Has the number been guessed by the user?
	numGuesses = 0			# The number of guesses the user has had
	
	print ("\n WELCOME TO COWS AND BULLS!")
	print("---------------------------\n")
	print (" The rules of the game are as follows:\n")
	print ("The computer will generate a 4 DIGIT random number (unknown to you). Your job is to guess the number.")
	print ("The computer will tell you how many 'cows' and 'bulls' you have based on your current guess.")
	print ("Cows are digit(s) which you have guessed correctly AND are in the right position(s).")
	print ("Bulls are digit(s) which you have guessed correctly but are in the WRONG position(s).")
	print ("HAVE FUN!\n")
	
	# Generate a random 4 digit number
	randomNumber = randint(1000,10000)
	
	# DEBUGGING
	# print ("The random number is: ", randomNumber)
	
	# Keep looping as long is the number is not correctly guessed
	while not numberGuessed:
		
		try:
			# Ask user for a guess
			userGuess = int(input("Please enter a guess: "))
		# If the user enters something other than a number, print an error message and try again.
		except ValueError:
			print ("Oops! Not a valid number. Please try again.\n")
			continue
		
		# If the number is valid check if the value of the number is valid
		if userGuess < 1000 or userGuess >= 10000:
			print ("The number you have entered is not a 4 digit number. Please try again!\n")
			continue
			
		numGuesses += 1	# Increment the number of guesses the user has taken.
		
		# Calculate the number of bulls and cows between the user guess and the random number.
		cowsAndBulls = countCowsAndBulls(randomNumber, userGuess)
		
		# If the number of cows is 4, all digits are correctly guessed and in the right positions.
		# Else print the number of cows and bulls
		if cowsAndBulls[0] == 4:
			print ("\nCongratulations! You correctly guessed the number ", randomNumber)
			print ("You took ", numGuesses," guesses!")
			print ("Closing...\n")
			sleep(1)
			numberGuessed = True	# Number has been guessed. Quit.
		else:
			print (cowsAndBulls[0]," cows, ",cowsAndBulls[1]," bulls\n")